name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: tasktracker_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          backend/package.json
          frontend/package.json

    - name: Install Backend Dependencies
      run: |
        cd backend
        npm install

    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm install

    - name: Lint Backend
      run: |
        cd backend
        npm run lint

    - name: Lint Frontend
      run: |
        cd frontend
        npm run lint

    # DB is provided via services; tests sync schema themselves

    - name: Test Backend
      run: |
        cd backend
        npm test
      env:
        NODE_ENV: test
        DB_HOST: postgres
        DB_PORT: 5432
        DB_NAME: tasktracker_test

    - name: Build Frontend
      run: |
        cd frontend
        npm run build

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: ${{ env.DOCKER_USER != '' && env.DOCKER_PASS != '' }}
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USER }}
        password: ${{ env.DOCKER_PASS }}

    - name: Build Backend image (no push)
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: false
        tags: app12_backend:ci-${{ github.sha }}

    - name: Build and push Backend image
      if: ${{ env.DOCKER_USER != '' && env.DOCKER_PASS != '' }}
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ env.DOCKER_USER }}/task-tracker-backend:latest
          ${{ env.DOCKER_USER }}/task-tracker-backend:${{ github.sha }}

    - name: Build Frontend image (no push)
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: false
        tags: app12_frontend:ci-${{ github.sha }}

    - name: Build and push Frontend image
      if: ${{ env.DOCKER_USER != '' && env.DOCKER_PASS != '' }}
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ env.DOCKER_USER }}/task-tracker-frontend:latest
          ${{ env.DOCKER_USER }}/task-tracker-frontend:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        echo "You can add your deployment steps here"
